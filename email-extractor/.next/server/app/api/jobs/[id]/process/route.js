"use strict";(()=>{var e={};e.id=336,e.ids=[336],e.modules={517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9491:e=>{e.exports=require("assert")},4300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},2361:e=>{e.exports=require("events")},7147:e=>{e.exports=require("fs")},3685:e=>{e.exports=require("http")},5687:e=>{e.exports=require("https")},1808:e=>{e.exports=require("net")},2037:e=>{e.exports=require("os")},1017:e=>{e.exports=require("path")},5477:e=>{e.exports=require("punycode")},2781:e=>{e.exports=require("stream")},4404:e=>{e.exports=require("tls")},6224:e=>{e.exports=require("tty")},7310:e=>{e.exports=require("url")},3837:e=>{e.exports=require("util")},9796:e=>{e.exports=require("zlib")},6321:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>b,originalPathname:()=>q,patchFetch:()=>x,requestAsyncStorage:()=>m,routeModule:()=>c,serverHooks:()=>f,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>j});var o={};t.r(o),t.d(o,{POST:()=>d});var s=t(5419),a=t(9108),i=t(9678),n=t(8070),u=t(8234),p=t(5713);async function d(e,{params:r}){try{let{data:e,error:t}=await u.O.from("jobs").select("*").eq("id",r.id).single();if(t)return console.error("Error fetching job:",t),n.Z.json({error:t.message},{status:500});if(!e)return n.Z.json({error:"Job not found"},{status:404});if("pending"!==e.status)return n.Z.json({error:"Job is already processing or completed"},{status:400});let{error:o}=await u.O.from("jobs").update({status:"processing",updated_at:new Date().toISOString(),last_processed_timestamp:new Date().toISOString()}).eq("id",r.id);if(o)return console.error("Error updating job status:",o),n.Z.json({error:o.message},{status:500});return l(e),n.Z.json({message:"Job processing started",jobId:r.id})}catch(e){return console.error("Error in POST /api/jobs/[id]/process:",e),n.Z.json({error:e.message||"Failed to process job"},{status:500})}}async function l(e){let r=new Set;try{let t=Math.ceil(e.urls.length/5);for(let o=0;o<t;o++){let t=5*o,s=Math.min(t+5,e.urls.length),a=e.urls.slice(t,s),i=[];for(let r of a)try{let t=new p.Ug(r),o=await t.extractEmails();i.push(...o);let{error:s}=await u.O.from("jobs").update({processed_urls:e.processed_urls+1,updated_at:new Date().toISOString()}).eq("id",e.id);s&&console.error(`Error updating progress for job ${e.id}:`,s)}catch(t){console.error(`Error processing URL ${r} in job ${e.id}:`,t)}i.forEach(e=>r.add(e));let{error:n}=await u.O.from("jobs").update({emails:Array.from(r),current_batch:o+1,last_processed_timestamp:new Date().toISOString(),updated_at:new Date().toISOString()}).eq("id",e.id);n&&console.error(`Error updating emails for job ${e.id}:`,n),await new Promise(e=>setTimeout(e,1e3))}let{error:o}=await u.O.from("jobs").update({status:"completed",updated_at:new Date().toISOString()}).eq("id",e.id);o&&console.error(`Error marking job ${e.id} as completed:`,o)}catch(t){console.error(`Error processing job ${e.id}:`,t);let{error:r}=await u.O.from("jobs").update({status:"failed",updated_at:new Date().toISOString()}).eq("id",e.id);r&&console.error(`Error marking job ${e.id} as failed:`,r)}}let c=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/jobs/[id]/process/route",pathname:"/api/jobs/[id]/process",filename:"route",bundlePath:"app/api/jobs/[id]/process/route"},resolvedPagePath:"/Users/sankalp/fs5/email-extractor/app/api/jobs/[id]/process/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:f,headerHooks:b,staticGenerationBailout:j}=c,q="/api/jobs/[id]/process/route";function x(){return(0,i.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:g})}}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[638,206,323,949,364,896],()=>t(6321));module.exports=o})();